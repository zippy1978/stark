; ModuleID = 'test/scratchpad.st'
source_filename = "test/scratchpad.st"

%array.string = type { %string*, i64 }
%string = type { i8*, i64 }
%array.int = type { i64*, i64 }

define internal i32 @main(%array.string %0) {
entry:
  %args = alloca %array.string, align 8
  store %array.string %0, %array.string* %args, align 8
  call void @stark_runtime_mm_init()
  %p = alloca %array.int, align 8
  %alloc = call i8* @stark_runtime_mm_alloc(i64 mul (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 3))
  %1 = bitcast i8* %alloc to [3 x i64]*
  %elementptr = getelementptr inbounds [3 x i64], [3 x i64]* %1, i32 0, i32 0
  store i64 1, i64* %elementptr, align 4
  %elementptr1 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i32 0, i32 1
  store i64 2, i64* %elementptr1, align 4
  %elementptr2 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i32 0, i32 2
  store i64 3, i64* %elementptr2, align 4
  %alloc3 = call i8* @stark_runtime_mm_alloc(i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64))
  %2 = bitcast i8* %alloc3 to %array.int*
  %arrayleninit = getelementptr inbounds %array.int, %array.int* %2, i32 0, i32 1
  store i64 3, i64* %arrayleninit, align 4
  %arrayeleminit = getelementptr inbounds %array.int, %array.int* %2, i32 0, i32 0
  %3 = bitcast [3 x i64]* %1 to i64*
  store i64* %3, i64** %arrayeleminit, align 8
  %load = load %array.int, %array.int* %2, align 8
  store %array.int %load, %array.int* %p, align 8
  %alloc4 = call i8* @stark_runtime_mm_alloc(i64 11)
  %4 = bitcast i8* %alloc4 to [11 x i8]*
  %elementptr5 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 0
  store i8 104, i8* %elementptr5, align 1
  %elementptr6 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 1
  store i8 101, i8* %elementptr6, align 1
  %elementptr7 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 2
  store i8 108, i8* %elementptr7, align 1
  %elementptr8 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 3
  store i8 108, i8* %elementptr8, align 1
  %elementptr9 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 4
  store i8 111, i8* %elementptr9, align 1
  %elementptr10 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 5
  store i8 32, i8* %elementptr10, align 1
  %elementptr11 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 6
  store i8 119, i8* %elementptr11, align 1
  %elementptr12 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 7
  store i8 111, i8* %elementptr12, align 1
  %elementptr13 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 8
  store i8 114, i8* %elementptr13, align 1
  %elementptr14 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 9
  store i8 108, i8* %elementptr14, align 1
  %elementptr15 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i32 0, i32 10
  store i8 100, i8* %elementptr15, align 1
  %alloc16 = call i8* @stark_runtime_mm_alloc(i64 1)
  %5 = bitcast i8* %alloc16 to %string*
  %arrayleninit17 = getelementptr inbounds %string, %string* %5, i32 0, i32 1
  store i64 11, i64* %arrayleninit17, align 4
  %arrayeleminit18 = getelementptr inbounds %string, %string* %5, i32 0, i32 0
  %6 = bitcast [11 x i8]* %4 to i8*
  store i8* %6, i8** %arrayeleminit18, align 8
  %load19 = load %string, %string* %5, align 8
  call void @println(%string %load19)
  ret i64 2
}

declare void @stark_runtime_mm_init()

declare i8* @stark_runtime_mm_alloc(i64)

declare void @println(%string)

declare void @print(%string)