; ModuleID = 'main'
source_filename = "main"

%string = type { i8, i64 }

@coucou = constant [7 x i8] c"coucou\00"
@ciao = constant [5 x i8] c"ciao\00"
@fuck = constant [5 x i8] c"fuck\00"

define internal void @main() {
entry:
  %s = alloca %string, align 8
  store %string { [7 x i8]* @coucou, i64 6 }, %string* %s, align 4
  %load = load %string, %string* %s, align 4
  call void @printStr(%string %load)
  store %string { [5 x i8]* @ciao, i64 4 }, %string* %s, align 4
  %load1 = load %string, %string* %s, align 4
  call void @printStr(%string %load1)
  %x = alloca %string, align 8
  store %string { [5 x i8]* @fuck, i64 4 }, %string* %x, align 4
  %load2 = load %string, %string* %x, align 4
  call void @printStr(%string %load2)
  ret void
}

declare void @printStr(%string)

declare void @print(%string)

declare void @printi(i64)

declare void @printd(double)

declare i64 @now()

declare void @assertIntEquals(i64, i64)

declare void @assertDoubleEquals(double, double)

declare void @assertTrue(i1)