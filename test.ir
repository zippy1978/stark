; ModuleID = 'main'
source_filename = "main"

define internal void @main() {
entry:
  %call = call i64 @fib(i64 9)
  ret void
}


define internal i64 @fib(i64 %x1) {
entry:
  %x = alloca i64, align 8
  store i64 %x1, i64* %x, align 4
  %load = load i64, i64* %x, align 4
  %cmp = icmp slt i64 %load, 3
  br i1 %cmp, label %if, label %else

if:                                               ; preds = %entry
  br label %ifcont

else:                                             ; preds = %entry
  %load2 = load i64, i64* %x, align 4
  %binop = sub i64 %load2, 1
  %call = call i64 @fib(i64 %binop)
  %load3 = load i64, i64* %x, align 4
  %binop4 = sub i64 %load3, 2
  %call5 = call i64 @fib(i64 %binop4)
  %binop6 = add i64 %call, %call5
  br label %ifcont

ifcont:                                           ; preds = %else, %if
  %iftmp = phi i64 [ 1, %if ], [ %binop6, %else ]
  ret i64 %iftmp
}